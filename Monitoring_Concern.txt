Monitoring is an important concern for the application development world.  This concern tracks various metrics to help the developer find problem and bottleneck to remove them and optimise their application. To do this it has to present clearly the relevant information in report or alert form.

The feature exposed in these models are the core feature for monitoring:

Monitor:
This is the main controller.  At the specific user-defined interval, the monitor produces a report with all the information it has gathered.

Ressource:
Ressource monitoring is really important.  It can be monitored by other exterior software but having it embedded in your application centralize all the information.  Memory, CPU, Number of Thread, ...  This help to identify memory leaks, monitor overall performance, compile statistic on the business of the app and much more.

Function Calls:
Function calls monitoring enable to track specific metric to help diagnose bottleneck in the app.  For instance, all the calls to the database could be monitored to help identify the longest query and find the ones that produce the largest results.  Here the metrics are execution time, exception tracking, results, arguments, call count, etc. 

Report:
All the information gathered will have to be displayed in some fashion.  The most basic functionality is to log them into a file arranged in a specific layout and clearly displayed.

Alert:
Alerts are a way to inform that a specific monitored part of the application is doing something unusual.  Some rules on resources or agents and at each new monitor entry this is check.  If the rule is true, then a special report is produced targetting this unusual event.

Scheduled:
This provides a way to produce report a specific date or time independently of the monitor gathering frequency.  This also allows to aggregate many reports into one that is delivered at a defined interval or date.


The impacts of this concern are the following:

Complexity:
Having a proxy for monitoring function calls add to the complexity of the application.

Information:
This is the main focus.  The more you gather information the more you have to work with to diagnose the problem in your app.

Disk Space:
The more frequently you monitor the whole system the more data you have to store somewhere.

CPU:
This is minor but monitoring will draw a bit on the performance of the app.  The more part of the application is monitor the more the performance might take a hit.


This is a  part of every system because it provides developers multiple levels of monitoring information.  This information is critical to address performance related issue and ensure that if a problem is found, they are noticed quickly.  Without monitoring, developer is debugging blindly when trying to optimise a system.  Furthermore, it helps the developer a chance to adapt.  They can release a product quickly and optimise only the relevant and critical part of the system according to the monitoring system data.